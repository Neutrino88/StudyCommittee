# Generated by Django 4.0 on 2021-12-09 21:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('control_form', models.CharField(choices=[('EX', 'Экзамен'), ('CR', 'Зачет'), ('TX', 'Тест')], default='CR', max_length=2)),
                ('lecture_hours', models.PositiveIntegerField()),
                ('practice_hours', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'discipline',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'faculty',
            },
        ),
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('patronymic_name', models.CharField(max_length=30)),
                ('birthday', models.DateField()),
            ],
            options={
                'db_table': 'personal_info',
            },
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('study_format', models.CharField(choices=[('FT', 'Очное'), ('DS', 'Дистанционное'), ('PT', 'Очно-заочное')], default='FT', max_length=2)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.faculty')),
            ],
            options={
                'db_table': 'speciality',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('full_name', models.CharField(max_length=200)),
                ('creation_year', models.DateTimeField(verbose_name='Год образования')),
            ],
            options={
                'db_table': 'university',
            },
        ),
        migrations.CreateModel(
            name='StudyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10)),
                ('course_number', models.PositiveIntegerField()),
                ('speciality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.speciality')),
            ],
            options={
                'db_table': 'study_group',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.studygroup')),
                ('info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.personalinfo')),
            ],
            options={
                'db_table': 'student',
            },
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(max_length=30)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.faculty')),
                ('info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.personalinfo')),
            ],
            options={
                'db_table': 'lecturer',
            },
        ),
        migrations.AddField(
            model_name='faculty',
            name='university',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.university'),
        ),
        migrations.CreateModel(
            name='SpecialityDiscipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discipline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.discipline')),
                ('speciality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.speciality')),
            ],
            options={
                'db_table': 'speciality_discipline',
                'unique_together': {('speciality', 'discipline')},
            },
        ),
        migrations.CreateModel(
            name='LecturerGroupDiscipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discipline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.discipline')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.studygroup')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.lecturer')),
            ],
            options={
                'db_table': 'lecturer_group_discipline',
                'unique_together': {('professor', 'group', 'discipline')},
            },
        ),
    ]
